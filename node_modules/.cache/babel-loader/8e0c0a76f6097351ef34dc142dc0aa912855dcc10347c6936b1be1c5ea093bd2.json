{"ast":null,"code":"var _classCallCheck = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n/* global attachEvent */\n\nvar XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nvar Polling = require(\"./polling\");\nvar Emitter = require(\"component-emitter\");\nvar _require = require(\"../util\"),\n  pick = _require.pick;\nvar globalThis = require(\"../globalThis\");\nvar debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\nvar hasXHR2 = function () {\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nvar XHR = /*#__PURE__*/function (_Polling) {\n  \"use strict\";\n\n  _inherits(XHR, _Polling);\n  var _super = _createSuper(XHR);\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  function XHR(opts) {\n    var _this;\n    _classCallCheck(this, XHR);\n    _this = _super.call(this, opts);\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      _this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    return _this;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  _createClass(XHR, [{\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        xs: this.xs\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      var self = this;\n      req.on(\"success\", fn);\n      req.on(\"error\", function (err) {\n        self.onError(\"xhr post error\", err);\n      });\n    }\n\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      debug(\"xhr poll\");\n      var req = this.request();\n      var self = this;\n      req.on(\"data\", function (data) {\n        self.onData(data);\n      });\n      req.on(\"error\", function (err) {\n        self.onError(\"xhr poll error\", err);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n  return XHR;\n}(Polling);\nvar Request = /*#__PURE__*/function (_Emitter) {\n  \"use strict\";\n\n  _inherits(Request, _Emitter);\n  var _super2 = _createSuper(Request);\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  function Request(uri, opts) {\n    var _this2;\n    _classCallCheck(this, Request);\n    _this2 = _super2.call(this);\n    _this2.opts = opts;\n    _this2.method = opts.method || \"GET\";\n    _this2.uri = uri;\n    _this2.async = false !== opts.async;\n    _this2.data = undefined !== opts.data ? opts.data : null;\n    _this2.create();\n    return _this2;\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var opts = pick(this.opts, \"agent\", \"enablesXDR\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\");\n      opts.xdomain = !!this.opts.xd;\n      opts.xscheme = !!this.opts.xs;\n      var xhr = this.xhr = new XMLHttpRequest(opts);\n      var self = this;\n      try {\n        debug(\"xhr open %s: %s\", this.method, this.uri);\n        xhr.open(this.method, this.uri, this.async);\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {}\n\n        // ie6 check\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n        if (this.hasXDR()) {\n          xhr.onload = function () {\n            self.onLoad();\n          };\n          xhr.onerror = function () {\n            self.onError(xhr.responseText);\n          };\n        } else {\n          xhr.onreadystatechange = function () {\n            if (4 !== xhr.readyState) return;\n            if (200 === xhr.status || 1223 === xhr.status) {\n              self.onLoad();\n            } else {\n              // make sure the `error` event handler that's user-set\n              // does not throw in the same tick and gets caught here\n              setTimeout(function () {\n                self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n              }, 0);\n            }\n          };\n        }\n        debug(\"xhr data %s\", this.data);\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        setTimeout(function () {\n          self.onError(e);\n        }, 0);\n        return;\n      }\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess() {\n      this.emit(\"success\");\n      this.cleanup();\n    }\n\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      this.emit(\"data\", data);\n      this.onSuccess();\n    }\n\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emit(\"error\", err);\n      this.cleanup(true);\n    }\n\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      }\n      // xmlhttprequest\n      if (this.hasXDR()) {\n        this.xhr.onload = this.xhr.onerror = empty;\n      } else {\n        this.xhr.onreadystatechange = empty;\n      }\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n      this.xhr = null;\n    }\n\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n      if (data !== null) {\n        this.onData(data);\n      }\n    }\n\n    /**\n     * Check if it has XDomainRequest.\n     *\n     * @api private\n     */\n  }, {\n    key: \"hasXDR\",\n    value: function hasXDR() {\n      return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n    }\n\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n  return Request;\n}(Emitter);\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nRequest.requestsCount = 0;\nRequest.requests = {};\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\nmodule.exports = XHR;\nmodule.exports.Request = Request;","map":{"version":3,"names":["XMLHttpRequest","require","Polling","Emitter","_require","pick","globalThis","debug","empty","hasXHR2","xhr","xdomain","responseType","XHR","_Polling","_inherits","_super","_createSuper","opts","_this","_classCallCheck","call","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","_createClass","key","value","request","arguments","length","undefined","Object","assign","Request","uri","doWrite","data","fn","req","method","self","on","err","onError","doPoll","onData","pollXhr","_Emitter","_super2","_this2","async","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","status","setTimeout","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","XDomainRequest","enablesXDR","attachEvent","unloadHandler","addEventListener","terminationEvent","module","exports"],"sources":["E:/do an tot nghiep/push github asm3/client/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function(data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function() {\n          self.onLoad();\n        };\n        xhr.onerror = function() {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function() {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function() {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function() {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}