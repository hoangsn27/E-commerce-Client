{"ast":null,"code":"var _classCallCheck = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _get = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"E:/do an tot nghiep/push github asm3/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Polling = require(\"./polling\");\nvar globalThis = require(\"../globalThis\");\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\nvar JSONPPolling = /*#__PURE__*/function (_Polling) {\n  \"use strict\";\n\n  _inherits(JSONPPolling, _Polling);\n  var _super = _createSuper(JSONPPolling);\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  function JSONPPolling(opts) {\n    var _this;\n    _classCallCheck(this, JSONPPolling);\n    _this = _super.call(this, opts);\n    _this.query = _this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    _this.index = callbacks.length;\n\n    // add callback to jsonp global\n    var self = _assertThisInitialized(_this);\n    callbacks.push(function (msg) {\n      self.onData(msg);\n    });\n\n    // append to query string\n    _this.query.j = _this.index;\n    return _this;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  _createClass(JSONPPolling, [{\n    key: \"supportsBinary\",\n    get: function get() {\n      return false;\n    }\n\n    /**\n     * Closes the socket.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      if (this.script) {\n        // prevent spurious errors from being emitted when the window is unloaded\n        this.script.onerror = function () {};\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n      }\n      if (this.form) {\n        this.form.parentNode.removeChild(this.form);\n        this.form = null;\n        this.iframe = null;\n      }\n      _get(_getPrototypeOf(JSONPPolling.prototype), \"doClose\", this).call(this);\n    }\n\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var self = this;\n      var script = document.createElement(\"script\");\n      if (this.script) {\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n      }\n      script.async = true;\n      script.src = this.uri();\n      script.onerror = function (e) {\n        self.onError(\"jsonp poll error\", e);\n      };\n      var insertAt = document.getElementsByTagName(\"script\")[0];\n      if (insertAt) {\n        insertAt.parentNode.insertBefore(script, insertAt);\n      } else {\n        (document.head || document.body).appendChild(script);\n      }\n      this.script = script;\n      var isUAgecko = \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n      if (isUAgecko) {\n        setTimeout(function () {\n          var iframe = document.createElement(\"iframe\");\n          document.body.appendChild(iframe);\n          document.body.removeChild(iframe);\n        }, 100);\n      }\n    }\n\n    /**\n     * Writes with a hidden iframe.\n     *\n     * @param {String} data to send\n     * @param {Function} called upon flush.\n     * @api private\n     */\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var self = this;\n      var iframe;\n      if (!this.form) {\n        var form = document.createElement(\"form\");\n        var area = document.createElement(\"textarea\");\n        var id = this.iframeId = \"eio_iframe_\" + this.index;\n        form.className = \"socketio\";\n        form.style.position = \"absolute\";\n        form.style.top = \"-1000px\";\n        form.style.left = \"-1000px\";\n        form.target = id;\n        form.method = \"POST\";\n        form.setAttribute(\"accept-charset\", \"utf-8\");\n        area.name = \"d\";\n        form.appendChild(area);\n        document.body.appendChild(form);\n        this.form = form;\n        this.area = area;\n      }\n      this.form.action = this.uri();\n      function complete() {\n        initIframe();\n        fn();\n      }\n      function initIframe() {\n        if (self.iframe) {\n          try {\n            self.form.removeChild(self.iframe);\n          } catch (e) {\n            self.onError(\"jsonp polling iframe removal error\", e);\n          }\n        }\n        try {\n          // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n          var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n          iframe = document.createElement(html);\n        } catch (e) {\n          iframe = document.createElement(\"iframe\");\n          iframe.name = self.iframeId;\n          iframe.src = \"javascript:0\";\n        }\n        iframe.id = self.iframeId;\n        self.form.appendChild(iframe);\n        self.iframe = iframe;\n      }\n      initIframe();\n\n      // escape \\n to prevent it from being converted into \\r\\n by some UAs\n      // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n      data = data.replace(rEscapedNewline, \"\\\\\\n\");\n      this.area.value = data.replace(rNewline, \"\\\\n\");\n      try {\n        this.form.submit();\n      } catch (e) {}\n      if (this.iframe.attachEvent) {\n        this.iframe.onreadystatechange = function () {\n          if (self.iframe.readyState === \"complete\") {\n            complete();\n          }\n        };\n      } else {\n        this.iframe.onload = complete;\n      }\n    }\n  }]);\n  return JSONPPolling;\n}(Polling);\nmodule.exports = JSONPPolling;","map":{"version":3,"names":["Polling","require","globalThis","rNewline","rEscapedNewline","callbacks","JSONPPolling","_Polling","_inherits","_super","_createSuper","opts","_this","_classCallCheck","call","query","___eio","index","length","self","_assertThisInitialized","push","msg","onData","j","_createClass","key","get","value","doClose","script","onerror","parentNode","removeChild","form","iframe","_get","_getPrototypeOf","prototype","doPoll","document","createElement","async","src","uri","e","onError","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","navigator","test","userAgent","setTimeout","doWrite","data","fn","area","id","iframeId","className","style","position","top","left","target","method","setAttribute","name","action","complete","initIframe","html","replace","submit","attachEvent","onreadystatechange","readyState","onload","module","exports"],"sources":["E:/do an tot nghiep/push github asm3/client/node_modules/engine.io-client/lib/transports/polling-jsonp.js"],"sourcesContent":["const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    const self = this;\n    callbacks.push(function(msg) {\n      self.onData(msg);\n    });\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const self = this;\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = function(e) {\n      self.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const self = this;\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    function initIframe() {\n      if (self.iframe) {\n        try {\n          self.form.removeChild(self.iframe);\n        } catch (e) {\n          self.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = self.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = function() {\n        if (self.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}