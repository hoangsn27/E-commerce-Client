{"version":3,"file":"static/js/55.a8dcce1d.chunk.js","mappings":"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","sources":["Authentication/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [resMessage, setResMessage] = useState(\"\");\n\n  const [success, setSuccess] = useState(false);\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n            } else {\n              const fetchSignUp = async () => {\n                const params = {\n                  fullname: fullname,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await UserAPI.postSignUp(query);\n\n                console.log(response);\n                if (response.status === 200) {\n                  setSuccess(true);\n                }\n                setResMessage(response);\n              };\n\n              fetchSignUp();\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              // const fetchConversation = async () => {\n              //   const params = {\n              //     email: email,\n              //     password: password,\n              //   };\n\n              //   const query = \"?\" + queryString.stringify(params);\n\n              //   const response = await MessengerAPI.postConversation(query);\n              //   console.log(response);\n              // };\n\n              // fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Đăng Ký</span>\n          <div className=\"d-flex justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">* Hãy Điền Tên Của Bạn!</span>\n            )}\n            {resMessage.status === 422 && (\n              <span className=\"text-danger\">{resMessage.errorMessage}</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Hãy Nhập E-mail Của Bạn!</span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">* E-mail Không Đúng Định Dạng</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Hãy Nhập Mật Khẩu!</span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">* Hãy Nhập Số Điện Thoại!</span>\n            )}\n          </div>\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n              placeholder=\"Họ Và Tên\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              placeholder=\"Mật Khẩu\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"text\"\n              placeholder=\"Số Điện Thoại\"\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {success && <Redirect to={\"/signin\"} />}\n            <button className=\"login100-form-btn\" onClick={handlerSignUp}>\n              Đăng Ký\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Đăng Nhập?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","fullname","setFullName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","phone","setPhone","_useState9","_useState10","errorEmail","setEmailError","_useState11","_useState12","emailRegex","setEmailRegex","_useState13","_useState14","errorPassword","setPasswordError","_useState15","_useState16","errorFullname","setFullnameError","_useState17","_useState18","errorPhone","setPhoneError","_useState19","_useState20","resMessage","setResMessage","_useState21","_useState22","success","setSuccess","_jsx","className","children","_jsxs","status","errorMessage","value","onChange","e","target","type","placeholder","Redirect","to","onClick","preventDefault","test","String","toLowerCase","validateEmail","fetchSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","query","response","wrap","_context","prev","next","queryString","UserAPI","sent","console","log","stop","apply","arguments","Link"],"sourceRoot":""}