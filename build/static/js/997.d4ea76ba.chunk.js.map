{"version":3,"file":"static/js/997.d4ea76ba.chunk.js","mappings":"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","sources":["API/CartAPI.jsx","Cart/Component/ListCart.jsx","Cart/Cart.jsx","Share/img/Image.jsx","convertMoney.js"],"sourcesContent":["import axiosClient from \"./axiosClient\";\n\nconst CartAPI = {\n  getCarts: (query, token) => {\n    const url = `/carts/fetch${query}`;\n\n    return axiosClient.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  },\n\n  postAddToCart: (query, token) => {\n    const url = `/carts/add${query}`;\n    console.log(url);\n    return axiosClient.post(\n      url,\n      {},\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n  },\n\n  deleteToCart: (query, token) => {\n    const url = `/carts/delete${query}`;\n    return axiosClient.post(\n      url,\n      {},\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n  },\n\n  putToCart: (query, token) => {\n    const url = `/carts/update${query}`;\n    return axiosClient.post(\n      url,\n      {},\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n  },\n};\n\nexport default CartAPI;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  const userId = localStorage.getItem(\"id_user\");\n\n  const handlerChangeText = (e) => {\n    console.log(e.target.value);\n  };\n\n  const handlerDelete = (getUser, getProduct) => {\n    if (!onDeleteCart) {\n      return;\n    }\n\n    onDeleteCart(getUser, getProduct);\n  };\n\n  const handlerDown = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    if (getCount === 1) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) - 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  const handlerUp = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) + 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Hình Ảnh</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">\n                Tên Sản Phẩm\n              </strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Giá</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Số Lượng</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">\n                Tổng Thanh Toán\n              </strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Xóa</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value) => (\n              <tr className=\"text-center\" key={value._id}>\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${value.productId._id}`}\n                    >\n                      <img src={value.productId.img1} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${value.productId._id}`}\n                    >\n                      {value.productId.name}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(value.productId.price)} VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerDown(userId, value.productId._id, value.quantity)\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={value.quantity}\n                      onChange={handlerChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerUp(userId, value.productId._id, value.quantity)\n                      }\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(value.productId.price) * parseInt(value.quantity)\n                    )}{\" \"}\n                    VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <a\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handlerDelete(userId, value.productId._id)}\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCart, updateCart } from \"../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport alertify from \"alertifyjs\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport convertMoney from \"../convertMoney\";\nimport Image from \"../Share/img/Image\";\n\nfunction Cart(props) {\n  const token = localStorage.getItem(\"token\");\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState();\n\n  const [total, setTotal] = useState();\n\n  // select expiryDate to check token is still valid\n  const expiryDate = localStorage.getItem(\"expiryDate\");\n  const timeRemaining = new Date(expiryDate).getTime() - new Date().getTime();\n\n  const autoLogout = (miliseconds) => {\n    setTimeout(() => {\n      localStorage.clear();\n      window.location.replace(\"/signin\");\n    }, miliseconds);\n  };\n\n  autoLogout(timeRemaining);\n\n  const dispatch = useDispatch();\n\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.productId.price) * parseInt(value.quantity));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          userId: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query, token);\n\n        setCart(response);\n\n        getTotal(response);\n      }\n    };\n\n    fetchData();\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchDelete = async () => {\n        const params = {\n          userId: getUser,\n          productId: getProduct,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.deleteToCart(query, token);\n        console.log(response);\n      };\n\n      fetchDelete();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Xóa Hàng Thành Công!\");\n    } else {\n      // user chưa đăng nhập\n\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = deleteCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: \"\",\n      });\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const params = {\n          userId: getUser,\n          productId: getProduct,\n          count: getCount,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.putToCart(query, token);\n        console.log(response);\n      };\n\n      fetchPut();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      console.log(\"Ban Da Dang Nhap!\");\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n        count: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n  const [redirect, setRedirect] = useState(false);\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n\n    setRedirect(true);\n  };\n  console.log(cart);\n  return (\n    <div className=\"container\">\n      <section\n        className=\"hero pb-3 bg-cover bg-center d-flex align-items-center\"\n        style={{ backgroundImage: `url(${Image.banner})` }}\n      >\n        <div className=\"container py-5\">\n          <div className=\"row px-4 px-lg-5\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Giỏ Hàng</h1>\n\n              <p className=\"text-muted text-uppercase mb-2\">\n                Một vài bước nữa thôi và bạn sẽ sở hữu sản phẩm\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"py-5\">\n        <h2 className=\"h5 text-uppercase mb-4\">Giỏ Hàng</h2>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n\n            <div className=\"bg-light px-4 py-3\">\n              <div className=\"row align-items-center text-center\">\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                  <Link\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\n                    to={`/shop`}\n                  >\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                    Tiếp Tục Mua Sắm\n                  </Link>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  {redirect && <Redirect to={\"/checkout\"} />}\n                  <span\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={onCheckout}\n                  >\n                    Tiến Hành Thanh Toán\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n              <div className=\"card-body\">\n                <h5 className=\"text-uppercase mb-4\">Giá Trị Đơn Hàng</h5>\n                <ul className=\"list-unstyled mb-0\">\n                  {cart &&\n                    cart.map((product) => (\n                      <li className=\"d-flex align-items-center justify-content-between mb-2\">\n                        <strong className=\"text-uppercase small font-weight-bold\">\n                          {product.productId.name}\n                        </strong>\n                        <span className=\"text-muted small\">\n                          {product.productId.price} VND x {product.quantity}\n                        </span>\n                      </li>\n                    ))}\n                  <li className=\"border-bottom my-2\"></li>\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Tổng Tiền\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n","import banner from './banner1.jpg';\nimport img1 from './product_1.png';\nimport img2 from './product_2.png';\nimport img3 from './product_3.png';\nimport img4 from './product_4.png';\nimport img5 from './product_5.png';\n\nconst Image = {\n\tbanner: banner,\n\timg1: img1,\n\timg2: img2,\n\timg3: img3,\n\timg4: img4,\n\timg5: img5,\n};\n\nexport default Image;\n","export default function convertMoney(money) {\n\tconst str = money + \"\";\n\tlet output = \"\"\n\n\tlet count = 0;\n\tfor (let i = str.length - 1; i >= 0; i--) {\n\t\tcount++;\n\t\toutput = str[i] + output\n\n\t\tif (count % 3 === 0 && i !== 0) {\n\t\t\toutput = \".\" + output\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\treturn output;\n}\n"],"names":["CartAPI","getCarts","query","token","url","concat","axiosClient","headers","Authorization","postAddToCart","console","log","deleteToCart","putToCart","ListCart","props","listCart","onDeleteCart","onUpdateCount","userId","localStorage","getItem","handlerChangeText","e","target","value","_jsx","className","children","_jsxs","scope","map","Link","to","productId","_id","src","img1","alt","width","name","convertMoney","price","style","cursor","onClick","getIdUser","getIdProduct","getCount","updateCount","parseInt","handlerDown","quantity","type","onChange","handlerUp","getUser","getProduct","defaultProps","useSelector","state","Cart","id_user","_useState","useState","_useState2","_slicedToArray","cart","setCart","_useState3","_useState4","total","setTotal","expiryDate","timeRemaining","Date","getTime","setTimeout","clear","window","location","replace","dispatch","useDispatch","_useState5","idProduct","count","_useState6","loadRedux","setLoadRedux","_useState7","_useState8","loadAPI","setLoadAPI","getTotal","carts","sub_total","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","response","wrap","_context","prev","next","queryString","sent","stop","apply","arguments","_useState9","_useState10","redirect","setRedirect","backgroundImage","Image","fetchDelete","_ref2","_callee2","_context2","alertify","data","idUser","action","deleteCart","fetchPut","_ref3","_callee3","_context3","updateCart","Redirect","length","product","banner","img2","img3","img4","img5","money","str","output","i"],"sourceRoot":""}